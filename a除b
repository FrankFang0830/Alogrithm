牛客网地址：https://www.nowcoder.com/practice/1df03f0989a1494fa2acfcbd43496ffd?tpId=98&tqId=32859&tPage=2&rp=8&ru=%2Fta%2F2019test&qru=%2Fta%2F2019test%2Fquestion-ranking
题目描述：
求a/b的小数表现形式。如果a可以整除b则不需要小数点。如果是有限小数，则可以直接输出。如果是无限循环小数，则需要把小数循环的部分用"()"括起来。
输入描述:
两个整数a和b，其中
0 <= a <= 1000 000
1 <= b <= 10 000
输出描述:
一个字符串，该分数的小数表现形式
示例1
输入10 1
输出10
10/1 = 10

示例2
输入1 2
输出0.5
说明1/2 = 0.5

示例3
输入1 3
输出0.(3)
说明1/3 = 0.333333...

示例4
输入1 6
输出0.1(6)
说明1/6 = 0.16666666....

示例5
输入1 7
输出0.(142857)
说明1 / 7 = 0.1428571428...

import java.util.ArrayList;
import java.util.Scanner;
//r如果是可以整除，直接输出结果
public class Main{

    public static void main(String[] args){
       Scanner sc= new Scanner(System.in);
        int dividend=sc.nextInt();
        int divisor=sc.nextInt();
        ArrayList after = new ArrayList();
        ArrayList<Integer> remainder = new ArrayList();
        int n= dividend/divisor;
        after.add(n);
        int k=dividend%divisor; 
        remainder.add(k);
        int i=0,m=0;
        int flag=0;//用来判断是否为无限循环。
       
        //正好整除
        if(k==0) System.out.println(n);
        //不能整好整除
        else if(k!=0) {
        		while(k!=0) {
        			m=k*10;
    	          	n=m/divisor;//放入结果集
    	          	k=m%divisor;//放入余数集
    	          	after.add(n);
            		
	          	if(remainder.contains(k)) {
	        			int pos=remainder.indexOf(k);
	        			after.add(pos+1, "(");
	        			after.add(")");
	        			break;
	        		}
	        		else {
	        			remainder.add(k);
	        		 }
	          	
        		}
       
        String result =""+after.get(0).toString();
        if(after.size()>=2)result=result+".";
        for(int q=1;q<after.size();q++) {
        	   result=result+after.get(q).toString();
        }
        System.out.println(result);
        }
    }
    
}

