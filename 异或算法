牛客网地址：https://www.nowcoder.com/practice/849b9e545f4742398d278f5dc4e003d2?tpId=98&tqId=32989&tPage=9&rp=9&ru=/ta/2019test&qru=/ta/2019test/question-ranking
题目描述：现在有一个长度为n的正整数序列，其中只有【一种】数值出现了奇数次，其他数值均出现偶数次，请你找出那个出现奇数次的数值。
输入：5
2 1 2 3 1
输出：3
本道题，如果用hashmap会超过时间复杂度，我们只需要运用一个最简单的 异或 操作性质，就可以解决此题。
异或运算：https://blog.csdn.net/kybd2006/article/details/3727218
异或运算符的特点是：数a两次异或同一个数b（a=a^b^b）仍然为原值a.
所以按照题目要求，只有一个数字出现了奇数次，其余的偶数次异或运算都自动抵消为0000。所以将数组里的数字挨个取出与之前的结果异或运算，剩下的那个数字就是最后的答案。（唯一一个奇数次出现的数值）
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
public class Main {
   public static void main(String args[]) throws NumberFormatException, IOException {
	  BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
      int n = Integer.parseInt(bf.readLine());
      int res = 0;
      String[] str = bf.readLine().split(" ");
      for(int i=0; i<n; i++){
          res = res^Integer.parseInt(str[i]);
      }
      System.out.println(res);
      bf.close();
   }
 }

